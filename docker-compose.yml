version: '3.8'

services:
  # Main application
  finsolve-chatbot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: finsolve-chatbot
    ports:
      - "8000:8000"  # API server
      - "8501:8501"  # Streamlit app
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://finsolve:finsolve123@postgres:5432/finsolve_rbac
      - CHROMA_PERSIST_DIRECTORY=/app/data/chroma_db
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - chroma_data:/app/data/chroma_db
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - finsolve-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: finsolve-postgres
    environment:
      - POSTGRES_DB=finsolve_rbac
      - POSTGRES_USER=finsolve
      - POSTGRES_PASSWORD=finsolve123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U finsolve -d finsolve_rbac"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finsolve-network

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: finsolve-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finsolve-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: finsolve-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - finsolve-chatbot
    restart: unless-stopped
    networks:
      - finsolve-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: finsolve-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - finsolve-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: finsolve-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - finsolve-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  chroma_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  finsolve-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
